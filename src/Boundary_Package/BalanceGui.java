/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Boundary_Package;

import Control_Package.BalanceControl;
import Control_Package.BussinesControl;
import Entities.Views.ViewConsolidadoAnual;
import Entities.Views.ViewConsolidadoMensual;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.util.List;
import javax.swing.GroupLayout;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Administrador
 */
public class BalanceGui extends javax.swing.JPanel {
    BussinesControl buscon=new BussinesControl();
    private MainFrame frame;
    private ChartFrame chartFrame;
////    private TableM
    private BalanceControl balanceControl=new BalanceControl();
    
    /**
     * Creates new form BalanceGui
     */
    public BalanceGui(MainFrame frame) {
        initComponents();
        initialization();
        this.frame=frame;
        this.viewResultsPanel.setVisible(true);
        this.jPanel2.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        viewResultsPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        SettingsPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        yearCombo = new javax.swing.JComboBox();
        visualizationCombo = new javax.swing.JComboBox();
        SearchButton = new javax.swing.JButton();
        chartPanel = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setBorder(javax.swing.BorderFactory.createTitledBorder("BALANCE"));

        viewResultsPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        title.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        title.setText("VENTAS");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel3.setText("Año");

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel4.setText("visualización");

        yearCombo.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        yearCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2011", "2012", "2013" }));

        visualizationCombo.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        visualizationCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mensual", "Anual" }));
        visualizationCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                visualizationComboItemStateChanged(evt);
            }
        });
        visualizationCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualizationComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SettingsPanelLayout = new javax.swing.GroupLayout(SettingsPanel);
        SettingsPanel.setLayout(SettingsPanelLayout);
        SettingsPanelLayout.setHorizontalGroup(
            SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SettingsPanelLayout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yearCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visualizationCombo, 0, 128, Short.MAX_VALUE))
        );
        SettingsPanelLayout.setVerticalGroup(
            SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(jLabel4)
                .addComponent(yearCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(visualizationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        SearchButton.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        SearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/kappfinder.png"))); // NOI18N
        SearchButton.setText("CONSULTAR");
        SearchButton.setPreferredSize(new java.awt.Dimension(167, 80));
        SearchButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/kappfinder.png"))); // NOI18N
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        chartPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SearchButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SettingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(title)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(title)
                .addGap(14, 14, 14)
                .addComponent(SettingsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout viewResultsPanelLayout = new javax.swing.GroupLayout(viewResultsPanel);
        viewResultsPanel.setLayout(viewResultsPanelLayout);
        viewResultsPanelLayout.setHorizontalGroup(
            viewResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewResultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(153, Short.MAX_VALUE))
        );
        viewResultsPanelLayout.setVerticalGroup(
            viewResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewResultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(358, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(viewResultsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(viewResultsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 169, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void visualizationComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualizationComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visualizationComboActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        //int month= monthCombo.getSelectedIndex();
        List<ViewConsolidadoMensual> SalesForMonth;
        List<ViewConsolidadoAnual> SalesForYear;
        int year= Integer.parseInt(""+yearCombo.getSelectedItem());
        if(this.visualizationCombo.getSelectedItem().equals("Anual")){
            SalesForYear=balanceControl.getSalesForYear();
            DefaultCategoryDataset dataset= new DefaultCategoryDataset();
            String Sales = "ventas";
            String[][] years={{"2011","n","0"},{"2012","n","0"},{"2013","n","0"}};
            for (ViewConsolidadoAnual va:SalesForYear){
                if (va.getAño()==2011){
                     years[1][1]="y";
                     years[1][2]=""+va.getTotal();
                }else if (va.getAño()==2012){
                     years[2][1]="y";
                     years[2][2]=""+va.getTotal();
                }else if (va.getAño()==2013){
                     years[2][1]="y";
                     years[2][2]=""+va.getTotal();
                }     
            }
            for (int i = 0; i < 3; i++) {
                Double SalesTotal = Double.parseDouble(years[i][2]);
                dataset.setValue(SalesTotal, Sales, years[i][0]);
            }
            createPlot(dataset);
        }else if(this.visualizationCombo.getSelectedItem().equals("Mensual")){
            SalesForMonth = balanceControl.getSalesForMonth(year);
            DefaultCategoryDataset dataset= new DefaultCategoryDataset();
            String Sales = "ventas";
            String[][] months={{"","n","0"},{"Enero","n","0"},{"Febrero","n","0"},{"Marzo","n","0"},{"Abril","n","0"},{"Mayo","n","0"},{"Junio","n","0"},
                {"Julio","n","0"},{"Agosto","n","0"},{"Septiembre","n","0"},{"Octubre","n","0"},{"Noviembre","n","0"},{"diciembre","n","0"}};
            for(ViewConsolidadoMensual vm:SalesForMonth){
               months[vm.getMes()][1]="y";
               months[vm.getMes()][2]=""+vm.getTotal();
            }
            for (int i = 1; i <=12; i++) {
                Double SalesTotal = Double.parseDouble(months[i][2]);
                dataset.setValue(SalesTotal, Sales, months[i][0]);
            }
            createPlot(dataset,""+year);
        }else{
           // this.monthCombo.setEnabled(true);
            this.yearCombo.setEnabled(true);
        }

    }//GEN-LAST:event_SearchButtonActionPerformed

    private void visualizationComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_visualizationComboItemStateChanged
        if(this.visualizationCombo.getSelectedItem().equals("Anual")){
           // this.monthCombo.setEnabled(false);
            this.yearCombo.setEnabled(false);
        }else if(this.visualizationCombo.getSelectedItem().equals("Mensual")){
           // this.monthCombo.setEnabled(false);
             this.yearCombo.setEnabled(true);
        }else{
           // this.monthCombo.setEnabled(true);
            this.yearCombo.setEnabled(true);
        }
        
    }//GEN-LAST:event_visualizationComboItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SearchButton;
    private javax.swing.JPanel SettingsPanel;
    private javax.swing.JPanel chartPanel;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel title;
    private javax.swing.JPanel viewResultsPanel;
    private javax.swing.JComboBox visualizationCombo;
    private javax.swing.JComboBox yearCombo;
    // End of variables declaration//GEN-END:variables

    private void initialization() {
        this.viewResultsPanel.setVisible(false);
    }

    private void setViewResultPanel() {
        
        this.viewResultsPanel.setVisible(true);
        this.jPanel2.setVisible(true);
                
//        this.categoriesPanel.removeAll();
//        this.categoriesPanel.add(panel,new BorderLayout());
//        this.categoriesPanel.setMinimumSize(panel.getPreferredSize());
//        this.categoriesPanel.setPreferredSize(panel.getPreferredSize());
//        this.categoriesPanel.setVisible(true);
        
        Dimension d = new Dimension(viewResultsPanel.getPreferredSize().width+100, viewResultsPanel.getPreferredSize().height + 100);
        this.setMinimumSize(d);
        this.setPreferredSize(d);
        frame.setMinimumSize(d);
        frame.setPreferredSize(d);
        
        this.repaint();
        frame.pack();
        frame.repaint();
        
        
               
    }

    private void createPlot(DefaultCategoryDataset dataset,String year) {
        JFreeChart barChart = ChartFactory.createBarChart(
         year,        //Título de la gráfica
         "Meses",           //leyenda Eje horizontal
         "Ventas totales ($)",      //leyenda Eje vertical
         dataset,                   //datos
         PlotOrientation.VERTICAL,  //orientación
         true,                      //incluir leyendas
         true,                      //mostrar tooltips
         true); 
         graficarDatos(barChart);
        
    }
    
    private void createPlot(DefaultCategoryDataset dataset) {
        JFreeChart barChart = ChartFactory.createBarChart(
         "historia",        //Título de la gráfica
         "Años",           //leyenda Eje horizontal
         "Ventas totales ($)",      //leyenda Eje vertical
         dataset,                   //datos
         PlotOrientation.VERTICAL,  //orientación
         true,                      //incluir leyendas
         true,                      //mostrar tooltips
         true); 
         graficarDatos(barChart);
        
    }
    
    private void graficarDatos(JFreeChart barChart){
        ChartPanel chart=new ChartPanel(barChart);
        
        this.chartPanel.setVisible(false);       
        this.chartPanel.removeAll();
        this.chartPanel.add(chart);
        this.chartPanel.setSize(chart.getPreferredSize());
        this.chartPanel.setVisible(true);
        chart.setVisible(true);
        this.chartPanel.repaint();
        jPanel2.repaint();
        chart.repaint();
        this.repaint();
    }
    

    
}
